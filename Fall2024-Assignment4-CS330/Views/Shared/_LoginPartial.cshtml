@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        // Retrieve the current user's Identity
        var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

        // Get the user object using the user ID
        var currentUser = await UserManager.FindByIdAsync(userId);

        // Retrieve the DisplayName claim
        var displayNameClaim = await UserManager.GetClaimsAsync(currentUser);
        var displayName = displayNameClaim.FirstOrDefault(c => c.Type == "DisplayName")?.Value;

        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Manage" title="Manage">@displayName</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
